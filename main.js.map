{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/product.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { Product } from './models/product';\nimport { ProductService } from './services/product.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'hometestclient';\n  products: Product[];\n\n  constructor(private productService: ProductService) {}\n\n  ngOnInit() {\n    this.getProducts();\n  }\n\n  getProducts() {\n    this.productService.getproducts().subscribe((data: Product[]) => {\n      this.products = data;\n      console.log(this.products);\n    });\n  }\n}\n","<div class=\"row mb-2\">\n  <div class=\"col\">\n    <button class=\"btn btn-primary float-right\" (click)=\"getProducts()\">\n      Refresh products\n    </button>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col\">\n    <div class=\"card\">\n      <div class=\"card-header\">Products</div>\n      <div class=\"card-body\">\n        <dx-data-grid\n          id=\"gridContainer\"\n          [dataSource]=\"products\"\n          [showBorders]=\"true\"\n          [showColumnLines]=\"true\"\n          [showRowLines]=\"true\"\n          [columnHidingEnabled]=\"true\"\n        >\n          <dxo-sorting mode=\"single\"></dxo-sorting>\n          <dxo-paging [pageSize]=\"10\"></dxo-paging>\n          <dxo-pager\n            [allowedPageSizes]=\"[5, 10, 15, 30]\"\n            [showInfo]=\"true\"\n            [showNavigationButtons]=\"true\"\n            [showPageSizeSelector]=\"true\"\n            [visible]=\"true\"\n          >\n          </dxo-pager>\n          <dxo-search-panel\n            [visible]=\"true\"\n            [width]=\"240\"\n            placeholder=\"Search...\"\n          ></dxo-search-panel>\n\n          <dxi-column dataField=\"name\" [hidingPriority]=\"10\"></dxi-column>\n          <dxi-column dataField=\"description\" [hidingPriority]=\"0\"></dxi-column>\n          <dxi-column dataField=\"quantity\" [hidingPriority]=\"9\"></dxi-column>\n        </dx-data-grid>\n      </div>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { DxDataGridModule } from 'devextreme-angular';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, HttpClientModule, DxDataGridModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpErrorResponse,\r\n  HttpHeaders,\r\n} from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProductService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getproducts() {\r\n    return this.http.get(`${environment.apiUrl}/ProductsClient`).pipe(\r\n      retry(1), // retry a failed request up to 1 times\r\n      catchError(this.handleError) // then handle the error\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` + `body was: ${error.error}`\r\n      );\r\n    }\r\n\r\n    return throwError('Something bad happened; please try again later.');\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://sergio020893-001-site1.dtempurl.com/api',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}